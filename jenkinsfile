      import groovy.json.JsonSlurperClassic
def TEST = 'failure'
try {

node {
stage ("clone") {
   sh 'env'
        def scmVars = checkout([
        $class: 'GitSCM',
          branches: [[name: '${GIT_BRANCH}']],
          userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/rameshthoomu/jenkins_commits']]])
                  // Display the variable using scmVars
      echo "======> ${scmVars.GIT_COMMIT}"

      // Displaying the variables saving it as environment variable
      env.GIT_COMMIT = scmVars.GIT_COMMIT
    
      

httpRequest url: 'https://jenkinsurl.local/job/Build/api/json', outputFile: 'output.json'

def jsonFile = readFile(file: 'output.json')
def data = new JsonSlurperClassic().parseText(jsonFile)
latestBuildNumber = "${data.lastSuccessfulBuild.number}"

      echo " BUILD ${latestBuildNumber}"
      sh 'env'
   }
   stage("next stage") {
   dir('ui') {
    echo "${GIT_COMMIT}"
    echo "${GIT_PREVIOUS_SUCCESSFUL_COMMIT}"
    CHANGED = sh(returnStdout: true, script: 'git diff --name-only ${GIT_PREVIOUS_SUCCESSFUL_COMMIT} ${GIT_COMMIT} $WORKSPACE/ui')
   }
   echo "====> ${CHANGED}"
   if ("${CHANGED}".isEmpty()) {
     echo "no changed"
   }
   else {
    echo "Changed"
   }
   } //stage
}
} finally { 
if("${TEST}" == 'success') {
  echo "Success"
  } 
  else {
  echo "failure"
  }
  }

